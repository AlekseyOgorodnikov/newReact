{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/MyMessage/Message/Message.jsx","components/Dialogs/MyMessage/Dialogs.jsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","classes","dialog","active","avatar","src","alt","to","id","name","Message","message","messageUser","maxLength","maxLengthCreatore","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogPage","dialogsElements","dialogs","map","key","messagesElement","messages","isAuth","dialogsItems","values","addMessage","newMessageElement","mapStateToPropsForRedirect","auth","compose","Component","RedirectComponent","this","React","connect","dialogsPage","dispatch","addMessageActionCreator"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCanKC,MAVf,SAAoBC,GAChB,OACI,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC3C,yBAAKH,UAAWC,IAAQG,OACnBC,IAAI,0EAA0EC,IAAI,yCACvF,kBAAC,IAAD,CAASC,GAAI,YAAcR,EAAMS,IAAKT,EAAMU,QCGzCC,MATf,SAAiBX,GACb,OACI,yBAAKC,UAAWC,IAAQU,SACnBZ,EAAMa,c,yCCkCnB,IAAMC,EAAYC,YAAkB,KAoB9BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAACjB,GACtB,OACE,0BAAMmB,SAAUnB,EAAMoB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBJ,KAAK,oBACLgB,YAAY,2FAGhB,6BACE,+FAUOC,EAnDf,SAAiB3B,GACf,IAAI4B,EAAQ5B,EAAM6B,WAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAC7B,GAAD,OACtC,kBAAC,EAAD,CAAYO,KAAMP,EAAOO,KAAMuB,IAAK9B,EAAOM,GAAIA,GAAIN,EAAOM,QAExDyB,EAAkBN,EAAMO,SAASH,KAAI,SAACG,EAAU1B,GAAX,OACvC,kBAAC,EAAD,CAASI,YAAasB,EAAStB,YAAaoB,IAAKxB,OAOnD,OAAKT,EAAMoC,OAGT,yBAAKnC,UAAWC,IAAQ6B,SACtB,yBAAK9B,UAAWC,IAAQmC,cAAeP,GACvC,yBAAK7B,UAAWC,IAAQiC,UACrBD,EACD,kBAAClB,EAAD,CAAqBG,SAX3B,SAAuBmB,GACrBtC,EAAMuC,WAAWD,EAAOE,wBAGA,kBAAC,IAAD,CAAUhC,GAAI,Y,wCCtBtCiC,EAA6B,SAACb,GAAD,MAAY,CACzCQ,OAAQR,EAAMc,KAAKN,S,OCeRO,uBDZiB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAK9C,MAAMoC,OAET,kBAACQ,EAAcE,KAAK9C,OAFI,kBAAC,IAAD,CAAUQ,GAAG,eAJT,GAEXuC,IAAMH,WAUtC,OAFqCI,YAAQP,EAARO,CAAoCH,KCI3EG,aAfoB,SAACpB,GACrB,MAAO,CACLC,WAAYD,EAAMqB,gBAGG,SAACC,GACxB,MAAO,CACLX,WAAY,SAACC,GACXU,EAASC,YAAwBX,SAKxBG,CAGbhB","file":"static/js/4.19d38b9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__4UrCj\",\"dialogsItems\":\"Dialogs_dialogsItems__Bi6B4\",\"avatar\":\"Dialogs_avatar__1qVn0\",\"messages\":\"Dialogs_messages__1oTyC\",\"message\":\"Dialogs_message__2p8Zl\"};","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction DialogItem(props) {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <img className={classes.avatar}\r\n                 src=\"https://www.meme-arsenal.com/memes/64778250478209d48c5dbc733a3256b0.jpg\" alt=\"Аватар\"/>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from '../.././Dialogs.module.css';\r\n\r\nfunction Message(props) {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.messageUser}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Message;","/* eslint-disable eqeqeq */\r\nimport React from \"react\";\r\nimport classes from \"../Dialogs.module.css\";\r\nimport DialogItem from \"../DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport {\r\n  required,\r\n  maxLengthCreatore,\r\n} from \"../../../utills/validators/validators\";\r\n\r\nfunction Dialogs(props) {\r\n  let state = props.dialogPage;\r\n\r\n  let dialogsElements = state.dialogs.map((dialog) => (\r\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n  ));\r\n  let messagesElement = state.messages.map((messages, id) => (\r\n    <Message messageUser={messages.messageUser} key={id} />\r\n  ));\r\n\r\n  function addNewMessage(values) {\r\n    props.addMessage(values.newMessageElement);\r\n  }\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>{dialogsElements}</div>\r\n      <div className={classes.messages}>\r\n        {messagesElement}\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength = maxLengthCreatore(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength]}\r\n          name=\"newMessageElement\"\r\n          placeholder=\"Введи сообщение\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Отправить</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import {\r\n  addMessageActionCreator,\r\n} from \"../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./MyMessage/Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogPage: state.dialogsPage,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageElement) => {\r\n      dispatch(addMessageActionCreator(newMessageElement));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs);\r\n"],"sourceRoot":""}